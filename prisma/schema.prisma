// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mongodb"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) // Use cuid() for unique string IDs in SQLite
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid()) // Use cuid() for the user ID as well
  email         String    @unique
  hashedPassword String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
}

model Application {
  id          String    @id @default(cuid())
  name        String
  email       String
  phone       String
  vin         String
  message     String
  status      String
  createdAt   DateTime  @default(now())
}


// model Account {
//   id                 String  @id @default(auto()) @map("_id") @db.ObjectId
//   userId             String  @db.ObjectId
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?  @db.String
//   access_token       String?  @db.String
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?  @db.String
//   session_state      String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }


// model User {
//   id            String    @id @default(auto()) @map("_id") @db.ObjectId
//   email         String   @unique
//   hashedPassword String
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
//   accounts      Account[]
// }

// model Application {
//   id          String    @id @default(auto()) @map("_id") @db.ObjectId
//   name        String
//   email       String
//   phone       String
//   vin         String
//   message     String
//   status      String
//   createdAt   DateTime  @default(now()) 
// }